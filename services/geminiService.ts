// FIX: Moved the Vite client types reference to the top of the file to ensure it is processed correctly by TypeScript.
/// <reference types="vite/client" />

// In a Vite environment, environment variables prefixed with VITE_ are exposed
// on the `import.meta.env` object. This is the standard and secure way to access them
// on the client-side. The execution environment (like Vercel) is expected
// to provide the `VITE_GEMINI_API_KEY` variable.

import { GoogleGenAI, Type } from "@google/genai";
import type { UserProfile, DailyPlan } from '../types';

let ai: GoogleGenAI | null = null;

const getAi = () => {
    // If the instance already exists, return it.
    if (ai) {
        return ai;
    }

    // Use import.meta.env to access env variables in a Vite environment.
    const apiKey = import.meta.env.VITE_GEMINI_API_KEY;
    
    if (!apiKey) {
      const errorMessage = "A chave da API Gemini n√£o foi encontrada. Verifique se a vari√°vel de ambiente `VITE_GEMINI_API_KEY` est√° configurada corretamente nas configura√ß√µes do seu projeto na Vercel e fa√ßa um novo deploy.";
      console.error(errorMessage);
      throw new Error(errorMessage);
    }
    
    try {
        // Create and cache the instance.
        // As per guidelines, the API key is passed directly during initialization.
        ai = new GoogleGenAI({ apiKey });
        return ai;
    } catch (error) {
        console.error("Erro ao inicializar o GoogleGenAI:", error);
        // Ensure `ai` is null if initialization fails, so we can retry.
        ai = null; 
        throw new Error("Falha ao inicializar o cliente Gemini AI. Verifique o console para mais detalhes.");
    }
}

export const getGeminiResponse = async (
  history: { role: 'user' | 'model'; parts: { text: string }[] }[],
  newMessage: string,
  userProfile: UserProfile | null
) => {
  try {
    const aiClient = getAi();
    const systemInstruction = `Voc√™ √© Luna, a nutricionista virtual do Monjaro Japon√™s. Sua fun√ß√£o √© atuar como uma especialista amig√°vel, inteligente e extremamente amorosa.

    **SUA PERSONALIDADE:**
    - **Nome:** Luna. Sempre se apresente como Luna no in√≠cio da conversa ou ao abordar um novo t√≥pico.
    - **Tom:** Extremamente gentil, acolhedora, encorajadora e divertida. Comunique-se de forma educativa, usando emojis (‚ù§Ô∏è, üòä, ‚ú®, üçµ) para deixar a conversa leve e positiva.
    - **Miss√£o:** Ajudar o usu√°rio a se sentir bem e motivado em sua jornada de emagrecimento com o m√©todo Monjaro Japon√™s e o protocolo DETOX10.

    ---
    **REGRA DE ENCERRAMENTO OBRIGAT√ìRIA:**
    **SEMPRE**, sem exce√ß√£o, finalize TODAS as suas respostas com uma mensagem motivacional curta e o seguinte aviso legal. Esta √© a regra mais importante.
    ‚ö†Ô∏è ‚ÄúEste plano n√£o substitui o acompanhamento m√©dico ou nutricional. Consulte um profissional de sa√∫de antes de iniciar qualquer protocolo.‚Äù
    ---

    Dados do usu√°rio atual:
    - Nome: ${userProfile?.name || 'N√£o informado'}
    - Idade: ${userProfile?.age || 'N√£o informado'}
    - Peso: ${userProfile?.weight || 'N√£o informado'} kg
    - Altura: ${userProfile?.height || 'N√£o informado'} cm
    - Restri√ß√µes: ${userProfile?.dietary_restrictions?.join(', ') || 'Nenhuma'}

    ---
    **INFORMA√á√ïES GERAIS SOBRE O M√âTODO (Use para responder perguntas)**
    **Descri√ß√£o Oficial ‚Äì Simone Tavares**
    Simone Tavares √© a idealizadora do Monjaro Japon√™s Natural, uma tecnologia japonesa de emagrecimento natural, criada ap√≥s anos de estudo sobre metabolismo, comportamento alimentar e neuroci√™ncia.
    Ela tamb√©m √© mentora do programa ‚ÄúVers√£o Mais Leve de Mim‚Äù e autora dos livros ‚ÄúC√≥digo do Autoconhecimento‚Äù e ‚ÄúA Ci√™ncia para Emagrecer de Vez‚Äù ‚Äî refer√™ncias em transforma√ß√£o f√≠sica e emocional atrav√©s da reeduca√ß√£o metab√≥lica e mental.
    Simone emagreceu 73 quilos de forma 100% natural, sem cirurgias e sem medicamentos, mantendo massa magra, pele firme, cabelo e unhas saud√°veis. Sua trajet√≥ria √© hoje um s√≠mbolo de supera√ß√£o e inspira√ß√£o para milhares de pessoas.

    **üçµ O Monjaro Japon√™s Natural**
    O Monjaro Japon√™s Natural possui o mesmo poder do Monjaro farmac√™utico ‚Äî mas √© ainda melhor, pois oferece resultados mais seguros, naturais e duradouros, sem efeitos colaterais.
    Enquanto o medicamento atua de forma limitada, o Monjaro Japon√™s atua de forma completa, ativando n√£o apenas os horm√¥nios GLP-1 e GIP-1, mas tamb√©m CCK, PYY e leptina ‚Äî respons√°veis por estimular o centro da saciedade no c√©rebro.
    Al√©m disso, ele equilibra neurotransmissores como dopamina, serotonina e noradrenalina, que promovem bem-estar, foco, saciedade e motiva√ß√£o, tornando o processo de emagrecimento muito mais eficiente e prazeroso.
    Por isso, o Monjaro Japon√™s Natural √© considerado mais potente e inteligente que o farmac√™utico.

    **‚öñÔ∏è Por que os resultados s√£o definitivos**
    O Monjaro Japon√™s Natural n√£o atua apenas no corpo ‚Äî ele reprograma a mente e o metabolismo por meio de dois fen√¥menos cient√≠ficos fundamentais: a neuroplasticidade e a epig√™nese.
    *   **Neuroplasticidade** √© a capacidade do c√©rebro de criar novas conex√µes neurais e substituir padr√µes antigos por novos h√°bitos saud√°veis.
    *   **Epig√™nese (ou epigen√©tica)** √© o processo em que os h√°bitos e o estilo de vida passam a influenciar a express√£o dos genes.

    **üíö Principais benef√≠cios**
    *   Infinitamente mais acess√≠vel que o farmac√™utico, 100% natural e n√£o invasivo, eleva naturalmente a saciedade, acelera o metabolismo, atua na neuroplasticidade e epig√™nese, ajuda no tratamento do lipedema, auxilia no controle do diabetes tipo 2, melhora o humor e o bem-estar.

    **üí¨ Miss√£o e Prop√≥sito**
    Simone Tavares acredita que o verdadeiro emagrecimento √© um processo de autoconhecimento e reprograma√ß√£o mental, onde corpo, mente e emo√ß√µes se alinham.

    ---
    **ü•ó DIRETRIZES NUTRICIONAIS (Use para dar conselhos, receitas e responder d√∫vidas)**

    **1Ô∏è‚É£ Regras B√°sicas do Plano:**
    - M√°ximo 1.400 kcal por dia
    - 100g de prote√≠na por dia (divididos em 4-5 refei√ß√µes)
    - M√°ximo 80g de carboidratos/dia
    - M√°ximo 60g de gorduras/dia, evitando as saturadas

    **2Ô∏è‚É£ Regras do Protocolo DETOX10 (Primeiros 10 dias):**
    - **Dias 1‚Äì4:** N√£o consumir gr√£os (arroz, feij√£o, quinoa, aveia, amendoim, soja).
    - **Frutas:** Apenas 1 a 2 por√ß√µes por dia.
    - **Suco Detox:** Obrigat√≥rio diariamente, mas usar couve manteiga no m√°ximo 3x por semana (pode interferir na tireoide).
    - **Bebidas:** Ch√°s √† vontade, caf√© com modera√ß√£o (at√© 3 x√≠caras de 50ml, at√© as 15h). Sem √°lcool.
    - **Restri√ß√µes:** Sem gl√∫ten, sem leite animal (exceto cream cheese light e cottage). Sem a√ß√∫car refinado/ado√ßantes (exceto est√©via, xilitol, eritritol). Sem carnes vermelhas e processadas.

    **3Ô∏è‚É£ Regras de Rotina:**
    - Beber 2 a 2,5 litros de √°gua/dia.
    - Dormir pelo menos 6h.
    - Almo√ßar at√© as 14h (nunca pular).
    - Organizar refei√ß√µes e treinos com anteced√™ncia.
    - Manter disciplina e acompanhar resultados.

    **üçΩÔ∏è Ao Gerar Planos ou Receitas no Chat:**
    - Sempre inclua ingredientes e modo de preparo.
    - Informe os macros (calorias, prote√≠nas, carboidratos, gorduras).
    - Indique op√ß√µes de substitui√ß√£o.
    - Se o usu√°rio pedir uma lista de compras, gere para a semana e agrupe por categorias.
    `;
    
    const contents = [...history, { role: 'user' as const, parts: [{ text: newMessage }] }];

    const response = await aiClient.models.generateContent({
        model: 'gemini-2.5-flash',
        contents: contents,
        config: {
            systemInstruction: systemInstruction,
        },
    });

    return response.text;
  } catch (error: any) {
    console.error("Erro ao chamar a API Gemini:", error);

    let userMessage = "Desculpe, n√£o consegui processar sua solicita√ß√£o no momento. Tente novamente mais tarde.";

    try {
        if (error.message && typeof error.message === 'string' && error.message.includes('{')) {
            const jsonString = error.message.substring(error.message.indexOf('{'));
            const parsedError = JSON.parse(jsonString);
            const apiError = parsedError.error || parsedError;

            if (apiError.code === 503 || apiError.status === 'UNAVAILABLE') {
                userMessage = 'A IA est√° sobrecarregada no momento. Por favor, aguarde um pouco e tente novamente.';
            } else if (apiError.message) {
                userMessage = 'A IA encontrou um problema ao processar sua mensagem. Tente reformular a pergunta.';
            }
        }
    } catch (e) {
        console.error("N√£o foi poss√≠vel analisar a mensagem de erro da Gemini:", e);
    }
    
    throw new Error(userMessage);
  }
};


const recipeSchema = {
    type: Type.OBJECT,
    properties: {
        name: { type: Type.STRING, description: "Nome da receita." },
        type: { type: Type.STRING, description: "Tipo de refei√ß√£o (ex: Caf√© da Manh√£, Almo√ßo, Jantar, Lanche)." },
        ingredients: { type: Type.ARRAY, items: { type: Type.STRING }, description: "Lista de ingredientes com quantidades." },
        preparation: { type: Type.STRING, description: "Modo de preparo passo a passo." },
        calories: { type: Type.NUMBER, description: "Total de calorias (kcal)." },
        carbohydrates: { type: Type.NUMBER, description: "Total de carboidratos (g)." },
        proteins: { type: Type.NUMBER, description: "Total de prote√≠nas (g)." },
        fats: { type: Type.NUMBER, description: "Total de gorduras (g)." },
    },
    required: ["name", "type", "ingredients", "preparation", "calories", "carbohydrates", "proteins", "fats"],
};


export const generateMealPlan = async (userProfile: UserProfile, day: number, feedback?: string): Promise<DailyPlan> => {
    try {
        const aiClient = getAi();
        const systemInstruction = `Voc√™ √© um nutricionista expert para o app Monjaro Japon√™s. Sua tarefa √© criar um plano alimentar detalhado com baixo teor de carboidrato para um usu√°rio, focado em estimular GIP/GLP-1 e promover saciedade e emagrecimento saud√°vel. Retorne APENAS o objeto JSON, sem nenhum texto adicional ou formata√ß√£o markdown.`;
        
        let feedbackInstruction = '';
        if (feedback) {
            feedbackInstruction = `
            INSTRU√á√ÉO IMPORTANTE: O usu√°rio pediu para ajustar o plano deste dia. O feedback foi: "${feedback}".
            Gere um NOVO plano para o Dia ${day} que leve essa prefer√™ncia em considera√ß√£o, mas mantenha-se estritamente dentro de todas as regras.
            `;
        }

        const prompt = `Gere o plano alimentar para o Dia ${day} do programa de 28 dias para o seguinte usu√°rio:
        - Nome: ${userProfile.name}
        - Idade: ${userProfile.age}
        - Peso: ${userProfile.weight} kg
        - Altura: ${userProfile.height} cm
        - Restri√ß√µes Alimentares: ${userProfile.dietary_restrictions?.join(', ') || 'Nenhuma'}

        ${feedbackInstruction}

        Siga ESTRITAMENTE TODAS as regras abaixo. A resposta deve ser APENAS o objeto JSON.

        ---
        **1. REGRAS GERAIS DE MACRONUTRIENTES (OBRIGAT√ìRIO)**
        - **Calorias:** M√°ximo 1.400 kcal por dia.
        - **Prote√≠nas:** Aproximadamente 100g por dia, divididos em 4 a 5 refei√ß√µes.
        - **Carboidratos:** M√°ximo 80g por dia.
        - **Gorduras:** M√°ximo 60g por dia. Evite gorduras saturadas.

        ---
        **2. REGRAS DO PROTOCOLO DETOX10 (PARA DIAS 1-10)**
        ${day <= 10 ? `
        ATEN√á√ÉO: Este √© o Dia ${day} do DETOX10. As seguintes regras s√£o OBRIGAT√ìRIAS:
        - **Dias 1‚Äì4:** √â PROIBIDO o consumo de gr√£os (arroz, feij√£o, quinoa, aveia, amendoim, soja).
        - **Frutas:** Apenas 1 a 2 por√ß√µes por dia.
        - **Suco Detox:** Obrigat√≥rio diariamente, mas usar couve manteiga no m√°ximo 3x por semana (pode interferir na tireoide).
        - **Bebidas:** Ch√°s permitidos. Caf√© at√© 3 x√≠caras de 50ml/dia (at√© 15h). √Ålcool √© PROIBIDO.
        - **Restri√ß√µes:** SEM gl√∫ten, SEM leite animal (exceto cream cheese light/cottage). SEM a√ß√∫car refinado/ado√ßantes (exceto est√©via/xilitol/eritritol). SEM carnes vermelhas e processadas.
        ` : ''}

        ---
        **3. REGRAS DE ESTRUTURA DO PLANO (OBRIGAT√ìRIO)**
        - O plano DEVE conter 4 refei√ß√µes: caf√© da manh√£, almo√ßo, lanche da tarde e jantar.
        - O JANTAR deve ser SEMPRE uma prote√≠na leve (frango, peixe) ou um shake de whey protein com uma fruta vermelha.
        - Iogurte grego ou natural DEVE ser inclu√≠do em pelo menos uma refei√ß√£o todos os dias.
        - Para cada receita, inclua op√ß√µes de substitui√ß√£o para um dos ingredientes principais.

        ---
        **4. TAREFAS E ROTINA**
        - Crie 3 tarefas di√°rias baseadas nestas regras: beber 2-2.5L de √°gua, dormir 6h, almo√ßar at√© 14h (nunca pular), organizar o dia seguinte.

        ---
        **5. LISTA DE ALIMENTOS PERMITIDOS (Use APENAS estes)**
        - **PRIORIDADE DE PROTE√çNAS:** D√™ prefer√™ncia para prote√≠nas mais acess√≠veis como ovos, sardinha, til√°pia, atum, peito de frango e prote√≠na de soja. Indique salm√£o poucas vezes. (Lembre-se que soja √© proibida nos primeiros 10 dias).
        - **Op√ß√µes de Prote√≠na Extra:** Inclua a op√ß√£o de usar Whey Protein (puro ou com frutas).
        - **Frutas:** Kiwi, Ma√ß√£, Morango, Banana, Coco, Pera, Abacaxi, Abacate, Melancia, Mam√£o, Lim√£o, Laranja.
        - **Oleaginosas e sementes:** Castanha-do-par√°, Castanha de caju, Nozes, Am√™ndoas, Amendoim, Semente de girassol, Semente de ab√≥bora, Chia.
        - **Prote√≠nas magras:** Ovo, Lombo, Peito de frango, Peixe (til√°pia, salm√£o, sardinha, atum), Iogurte natural, Iogurte grego, Whey protein, Prote√≠na de soja.
        - **Verduras e vegetais:** Couve-manteiga, Br√≥colis, Espinafre, Agri√£o, Escarola, Repolho, Jil√≥, Quiabo, Abobrinha, Ab√≥bora, Inhame, Cenoura, Tomate, Pepino, Chuchu, Vagem, Ervilha.
        - **Gr√£os e leguminosas:** Quinoa, Gr√£o-de-bico, Aveia. (Lembre-se da restri√ß√£o de gr√£os nos dias 1-4).
        - **Temperos e complementos:** Azeite, √ìleo de coco, Vinagre de ma√ß√£, P√°prica, Pimenta-do-reino, Maca peruana.
        - **Ado√ßantes e a√ß√∫cares naturais:** Mel, Xilitol, Estevia, Eritritol, A√ß√∫car de coco. (Lembre-se da restri√ß√£o de ado√ßantes).
        - **Farinhas permitidas:** Farinha de am√™ndoas, Farinha de coco, Farinha de linha√ßa, Farinha de aveia, Farinha de gr√£o-de-bico, Farinha de quinoa, Farinha de chia, Farinha de castanha-de-caju, Farinha de castanha-do-par√°, Farinha de amaranto, Farinha de arroz integral, Farinha de semente de ab√≥bora, Farinha de banana verde.

        ---
        **6. REGRAS PARA CARNE VERMELHA (APENAS AP√ìS O DIA 10)**
        - Carne vermelha (apenas Patinho) pode ser indicada no m√°ximo DUAS VEZES por semana, com por√ß√µes de 150g cada.
        - N√ÉO indique carne vermelha nos 10 primeiros dias.`;
        
        const response = await aiClient.models.generateContent({
            model: "gemini-2.5-flash",
            contents: prompt,
            config: {
                systemInstruction,
                responseMimeType: "application/json",
                responseSchema: {
                    type: Type.OBJECT,
                    properties: {
                        day: { type: Type.NUMBER },
                        meals: {
                            type: Type.OBJECT,
                            properties: {
                                breakfast: recipeSchema,
                                lunch: recipeSchema,
                                dinner: recipeSchema,
                                snack: recipeSchema
                            },
                             required: ["breakfast", "lunch", "dinner", "snack"]
                        },
                        tasks: { type: Type.ARRAY, items: { type: Type.STRING } }
                    },
                    required: ["day", "meals", "tasks"]
                },
            },
        });
        
        const jsonText = response.text.trim();
        if (!jsonText) {
            throw new Error("A API retornou uma resposta vazia, o que impediu a cria√ß√£o do plano.");
        }
        return JSON.parse(jsonText) as DailyPlan;

    } catch (error) {
        console.error("Erro ao gerar o plano alimentar:", error);
        if (error instanceof Error) {
            throw error;
        }
        throw new Error("N√£o foi poss√≠vel gerar o plano. Tente novamente.");
    }
}

export const generateShoppingList = async (plan: DailyPlan): Promise<string> => {
    try {
        const aiClient = getAi();
        const ingredients = [
            ...plan.meals.breakfast.ingredients,
            ...plan.meals.lunch.ingredients,
            ...plan.meals.dinner.ingredients,
            ...plan.meals.snack.ingredients,
        ].join('\n');
        
        const prompt = `A partir da seguinte lista de ingredientes para um dia de refei√ß√µes, crie uma lista de compras organizada por categorias (ex: Hortifr√∫ti, A√ßougue, Mercearia). Agrupe itens semelhantes e remova duplicatas. A lista √©: \n${ingredients}`;
        
         const response = await aiClient.models.generateContent({
            model: 'gemini-2.5-flash',
            contents: prompt,
            config: {
              systemInstruction: 'Voc√™ √© um assistente de compras que cria listas organizadas. Responda apenas com a lista em formato de texto simples, usando markdown para t√≠tulos e itens.'
            }
        });

        return response.text;
    } catch (error) {
        console.error("Erro ao gerar lista de compras:", error);
        return "N√£o foi poss√≠vel gerar a lista de compras no momento.";
    }
};
